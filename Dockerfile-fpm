# Base image
FROM php:7.4-fpm

# Install required dependencies
RUN apt-get update && apt-get install -y \
    git \
    zip \
    unzip \
    rsync \
    vim \
    openssl \
    curl \
    cron \
    acl \
    libzip-dev \
    libxml2-dev \
    libfreetype6-dev \
    libjpeg62-turbo-dev \
    libpng-dev \
    libwebp-dev \
    libmcrypt-dev \
    libonig-dev \
    libcurl4-openssl-dev \
    libicu-dev \
    libxslt1-dev \
    libtidy-dev \
    libmemcached-dev \
    && docker-php-ext-configure gd --with-freetype --with-jpeg --with-webp \
    && docker-php-ext-install -j$(nproc) \
    pdo_mysql \
    mysqli \
    mbstring \
    curl \
    xml \
    zip \
    gd \
    gettext \
    bcmath \
    intl \
    xsl \
    tidy \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Install Composer
#RUN curl -sS https://getcomposer.org/installer | /usr/bin/php -- --install-dir=/usr/local/bin --filename=composer
COPY --from=composer:latest /usr/bin/composer /usr/local/bin/composer

# Set the default working directory
WORKDIR /var/www/html

# Copy your application code to the container
COPY . /var/www/html

# Install PHP dependencies
RUN composer install --no-dev --optimize-autoloader


# copy the crontab in a location where it will be parsed by the system
COPY ./crontab /etc/cron.d/crontab
# owner can read and write into the crontab, group and others can read it
RUN chmod 0644 /etc/cron.d/crontab
# running our crontab using the binary from the package we installed
RUN /usr/bin/crontab /etc/cron.d/crontab
